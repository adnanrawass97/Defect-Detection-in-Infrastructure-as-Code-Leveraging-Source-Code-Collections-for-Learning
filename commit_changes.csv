Commit ID,Repo Name,File Path,Deleted Lines,Added Lines
8f7e7422235beeccafd5fba4ec9eb2a6d2b7c112,naftulikay/ansible-role-degoss,meta/main.yml,"        - 5
        - 6
    - name: Fedora
      versions:
        - 23
        - 24
        - 25
        - yakkety",
61c9bfaf749c8a4564d527a1eda151dc984f1d5a,naftulikay/ansible-role-degoss,tasks/main.yml,"  goss: executable={{ degoss_goss_bin }} path=""{{ goss_file }}"" format=""{{ goss_output_format }}""","  goss:
    executable: ""{{ degoss_goss_bin }}""
    path: ""{{ goss_file }}""
    format: ""{{ goss_output_format }}""
    env_vars: ""{{ goss_env_vars }}"""
89f47e4c444f5920d148cfc2c98a35b154bce888,naftulikay/ansible-role-degoss,tasks/main.yml,  when: goss_output.goss_failed,"  when: goss_output.get('goss_failed', true)"
d43974a94060139fa2db1e822a67e15fbdf226df,naftulikay/ansible-role-degoss,tasks/main.yml,"  when: goss_output.get('goss_failed', true)","- name: emit debugging output
  debug:
    msg: ""output info: {{ goss_output | to_nice_json }}""
  when: degoss_dump_output is defined

  when: goss_output.get('goss_failed')"
c2e2cba52de214008283a47d6625e6331df84f87,naftulikay/ansible-role-degoss,meta/main.yml,,"  name: degoss
  src: naftulikay.degoss
  version: v1.3.0"
69cd34ba27efa0b3db5fbc7dee3ad4fd1499dc8f,naftulikay/ansible-role-degoss,meta/main.yml,  version: v1.3.0,  version: v1.3.1
88703e5143fc7a0c117179d74bc6f2b5f8ba53c3,naftulikay/ansible-role-degoss,tasks/main.yml,"# set play facts
- name: establish download url
  set_fact:
    goss_download_url: ""{{ goss_github_repo_url }}/releases/download/v{{ goss_real_version }}/goss-linux-amd64""

    dest: ""{{ degoss_goss_bin }}-{{ goss_real_version }}""
  copy: src={{ item }} dest={{ degoss_test_root }}
  when: degoss_no_clean is undefined and not (degoss_no_clean|bool)
  fail: msg=""Goss Tests Failed.""","- name: create workdir
  command: mktemp -d /tmp/degoss.XXXXXXXXXX
  register: workdir

# set play facts
- name: establish facts
  set_fact:
    degoss_tmp_root: ""{{ workdir.stdout.strip() }}""
    degoss_test_root: ""{{ workdir.stdout.strip() }}/tests""
    degoss_goss_install_dir: ""{{ workdir.stdout.strip() }}/bin""
    degoss_goss_bin: ""{{ workdir.stdout.strip() }}/bin/goss""
    degoss_changed_when: ""not (degoss_idempotent | bool)""

# switch to pinned vs latest
    dest: ""{{ degoss_goss_bin }}-{{ item }}""
  with_items:
    - ""{{ goss_real_version }}""
  copy: src={{ item }} dest={{ degoss_test_root }} mode=0644 directory_mode=0755 setype=user_tmp_t
  when: degoss_clean | bool
  fail:
    msg: |-
      Goss Tests Failed: {{ goss_output.get('stdout').strip() }}"""
f1dcf16def239718896cbdf9b34040f16da66736,naftulikay/ansible-role-degoss,tasks/main.yml,"  fail:
    msg: |-
      Goss Tests Failed: {{ goss_output.get('stdout').strip() }}""","    cwd: ""{{ degoss_test_root }}""
  fail: msg=""Goss Tests Failed."""
406e0f403b3371862311de4f7122a3ed14b1e933,naftulikay/ansible-role-degoss,meta/main.yml,  version: v1.3.1,  version: v1.4.0
406e0f403b3371862311de4f7122a3ed14b1e933,naftulikay/ansible-role-degoss,tasks/versions/pinned.yml,,  changed_when: degoss_changed_when
406e0f403b3371862311de4f7122a3ed14b1e933,naftulikay/ansible-role-degoss,tasks/main.yml,"    degoss_changed_when: ""not (degoss_idempotent | bool)""",  changed_when: degoss_changed_when
97f53d06953827c0ab76e6de37028958bc7f513a,naftulikay/ansible-role-degoss,meta/main.yml,  version: v1.4.0,  version: v1.4.1
8912aa827e2be57e2ea4213d851395bc70d0d68e,naftulikay/ansible-role-degoss,meta/main.yml,  version: v1.4.1,  version: v1.4.2
147422d7808d38bb3ad5d2a05664233ea074262d,naftulikay/ansible-role-degoss,meta/main.yml,"  version: v1.4.2
  min_ansible_version: 2.2",  min_ansible_version: 2.4
00f3730d9de567d3afe8258b3b1ccde15045bac7,naftulikay/ansible-role-degoss,tasks/main.yml,"  copy: src={{ item }} dest={{ degoss_test_root }} mode=0644 directory_mode=0755 setype=user_tmp_t
    path: ""{{ goss_file }}""
  fail: msg=""Goss Tests Failed.""","    goss_file_basename: ""{{ goss_file.split('/')[-1] }}""
  copy:
    src: |-
      {%- if item.startswith('/') -%}
        {{ item }}
      {%- else -%}
        {{ playbook_dir | default(""."") }}/{{ item }}
      {%- endif -%}
    dest: ""{{ degoss_test_root }}""
    mode: 0644
    directory_mode: 0755
    setype: user_tmp_t
    path: ""./{{ goss_file_basename }}""
  fail:
    msg:
      message: Goss Tests Failed.
      rc: ""{{ goss_output.rc }}""
      tmp_root: ""{{ degoss_tmp_root }}""
      version: ""{{ goss_real_version }}"""
f9c2c2ce76d284d2127e0e030ca2924d6777ea38,naftulikay/ansible-role-degoss,tasks/main.yml,"  changed_when: degoss_changed_when
# set play facts
    degoss_test_root: ""{{ workdir.stdout.strip() }}/tests""
    degoss_goss_install_dir: ""{{ workdir.stdout.strip() }}/bin""
    degoss_goss_bin: ""{{ workdir.stdout.strip() }}/bin/goss""
    goss_file_basename: ""{{ goss_file.split('/')[-1] }}""
# switch to pinned vs latest
- include_tasks: versions/latest.yml
  when: goss_version == ""latest""

- include_tasks: versions/pinned.yml
  when: goss_version != ""latest""

# create goss directories
- name: create goss directories
  file: path={{ item }} state=directory
  with_items:
    - ""{{ degoss_tmp_root }}""
    - ""{{ degoss_test_root }}""
    - ""{{ degoss_goss_install_dir }}""
  changed_when: degoss_changed_when

# download goss
- name: install
  get_url:
    url: ""{{ goss_download_url }}""
    dest: ""{{ degoss_goss_bin }}-{{ item }}""
    mode: 0755
  with_items:
    - ""{{ goss_real_version }}""
  changed_when: degoss_changed_when

# symlink
- name: link
  file:
    state: link
    src: ""{{ degoss_goss_bin }}-{{ goss_real_version }}""
    dest: ""{{ degoss_goss_bin }}""
    force: true
  changed_when: degoss_changed_when
    dest: ""{{ degoss_test_root }}""
  changed_when: degoss_changed_when
  goss:
    executable: ""{{ degoss_goss_bin }}""
    path: ""./{{ goss_file_basename }}""
    cwd: ""{{ degoss_test_root }}""
    format: ""{{ goss_output_format }}""
    env_vars: ""{{ goss_env_vars }}""
  failed_when: false
  register: goss_output
  tags: [format_goss_output]

# clean everything up
- name: clean
  file: path={{ degoss_tmp_root }} state=absent
  when: degoss_clean | bool
  changed_when: degoss_changed_when

# our output callback plugin will catch the tag of this and format output accordingly
- name: report errors
  fail:
    msg:
      message: Goss Tests Failed.
      rc: ""{{ goss_output.rc }}""
      tmp_root: ""{{ degoss_tmp_root }}""
      version: ""{{ goss_real_version }}""
  when: goss_output.get('goss_failed') | bool
  tags: [format_goss_output]

- name: report module errors
  fail: msg=""Goss Module Run Failed.""
  when: goss_output.get('msg')|lower == ""module failure""
  tags: [format_goss_stacktrace]","  changed_when: false
    degoss_test_dir: ""{{ workdir.stdout.strip() }}/tests""
- name: create directories
  file: path={{ degoss_test_dir }} state=directory
  changed_when: false
    dest: ""{{ degoss_test_dir }}""
  changed_when: false
  degoss:
    clean: ""{{ degoss_clean }}""
    clean_on_failure: ""{{ degoss_clean_on_failure }}""
    debug: ""{{ degoss_debug }}""
    facts: ""{{ ansible_facts | to_json }}""
    test_dir: ""{{ degoss_test_dir }}""
    test_file: ""{{ goss_file }}""
    tmp_root: ""{{ degoss_tmp_root }}""
    variables: ""{{ goss_variables | default({}) | to_json }}"""
d1dbdb83d4357fe50853b205c13fb907e6cbba94,HanXHX/ansible-nginx,tasks/main.yml,"- name: SERVICE | Ensure nginx is started
  service: name=nginx state=started
",
1d56fc249dbbded2d1c5e7c7b1c87926305ae34a,HanXHX/ansible-nginx,tasks/vhost.yml,"  when: item.root is not defined and item.template != '_proxy'
  when: item.root is not defined and item.template != '_proxy'","  when: >
    item.root is not defined and
    (item.template is defined and item.template != '_proxy') and
    (item.delete is not defined or not item.delete)
  when: >
    item.root is not defined and
    (item.template is defined and item.template != '_proxy') and
    (item.delete is not defined or not item.delete)"
3fdc16578cbed5622b9caea9474aceac82ddd167,HanXHX/ansible-nginx,tasks/vhost.yml,"  file: dest=/etc/nginx/sites-enabled/{{ item.name if item.name is string else item.name[0] }} state=absent
  file: dest=/etc/nginx/sites-available/{{ item.name if item.name is string else item.name[0] }} state=absent
  file: dest=/etc/nginx/sites-enabled/{{ item.name if item.name is string else item.name[0] }} state=absent
  when: item.enable is defined and not item.enable","  file: path=/etc/nginx/sites-available/{{ item.name if item.name is string else item.name[0] }} state=absent
  file: path=/etc/nginx/sites-enabled/{{ item.name if item.name is string else item.name[0] }} state=absent
  when: (item.enable is defined and not item.enable) or (item.delete is defined and item.delete)"
a2e6e984369e99ba996b3a751fae42487e358e9f,HanXHX/ansible-nginx,tasks/config.yml,,"- name: LINEINFILE | Fix path
  lineinfile: >
    regexp='{{ item.0.regexp }}'
    line='{{ item.0.line }}'
    dest='{{ item.1 }}'
  with_nested:
    -
      - regexp: '^fastcgi_param  SCRIPT_FILENAME'
        line: 'fastcgi_param  SCRIPT_FILENAME    $realpath_root$fastcgi_script_name;'
      - regexp: '^fastcgi_param  DOCUMENT_ROOT'
        line: 'fastcgi_param  DOCUMENT_ROOT      $realpath_root;'
    - [ '/etc/nginx/fastcgi_params', '/etc/nginx/fastcgi.conf' ]
  when: nginx_fastcgi_fix_realpath"
552999c782dbca36fd546fec037c3e86f16b9fa3,HanXHX/ansible-nginx,tasks/prepare.yml,,"- name: SHELL | Get Nginx version
  shell: nginx -v 2>&1 | sed -r 's#.*/##;' | cut -d ' ' -f 1
  args:
    executable: /bin/sh
  register: nginx_version
  changed_when: false
  check_mode: no
"
552999c782dbca36fd546fec037c3e86f16b9fa3,HanXHX/ansible-nginx,tasks/install_Debian.yml,"- name: SHELL | Get Nginx version
  shell: nginx -v 2>&1 | sed -r 's#.*/##;' | cut -d ' ' -f 1
  args:
    executable: /bin/sh
  register: nginx_version
  changed_when: false
  check_mode: no

  when: ""{{ nginx_version.stdout | version_compare('1.9.11', 'ge')""","  when:
    ansible_distribution_major_version | version_compare('9', 'ge') or
    nginx_backports"
3da65983bde331ceea70156a633e23eed0c2eef9,HanXHX/ansible-nginx,tasks/ssl/acme.yml,"    acme_create: ""{{ acme_create | default([]) }}""","    acme_create: ""{{ acme_create | default([]) + [ (item.item) ] }}"""
